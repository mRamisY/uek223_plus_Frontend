name: FE Build, Test, SonarQube, Docker Push, and Remote Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Node.js for Frontend
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: yarn install

      # Step 4: Run frontend tests with Jest
      - name: Run tests with Jest
        run: yarn test --ci --coverage

      # Step 5: Run SonarQube Scan
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=nypag-1_uk-223
            -Dsonar.organization=nypag-1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 6: Checkout repository for Docker
      - name: Checkout repository for Docker
        uses: actions/checkout@v2

      # Step 7: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 8: Log in to Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 9: Build and push Docker image to Docker Hub
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fe-ci-cd:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      # Step 10: SSH into remote server and deploy
      - name: SSH into remote server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.JUMP_HOST }}
          username: ${{ secrets.JUMP_USERNAME }}
          password: ${{ secrets.JUMP_PASSWORD }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_password: ${{ secrets.PROXY_PASSWORD }}
          script: |
            cd ci-cd
            docker-compose -f docker-compose-fe.yml pull
            docker compose -f docker-compose-fe.yml up -d